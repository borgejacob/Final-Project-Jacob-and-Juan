<?xml version="1.0" encoding="UTF-8"?>
  <<<<<<< HEAD
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
  <plist version="1.0">
    <dict>
    <key>URL</key>
    <string>http://localhost:8888/notebooks/Final%20Project/Final%20Project.ipynb</string>
    </dict>
    </plist>
    
    
    <plist version="1.0">
    <dict>
    <key>URL</key>
    <string>http://localhost:8888/notebooks/Final%20Project/Final%20Project.ipynb</string>
    </dict>
    </plist>
    
# Installing RTCGA and other packages 
## Installing and opening RTCGA  
    
install.packages("BiocManager")
BiocManager::install("RTCGA", version = "3.8")
library(RTCGA)
  
##installing RTCGA packages
installTCGA(packages = "RTCGA.clinical", build_vignettes = TRUE)
library(RTCGA.clinical)  
  
##Installing other packages
install.packages("devtools")
library(devtools)
library(dplyr)
library(survival)
library(survminer)
  
#Cheking and downloading TCGA datasets  
  
## infoTCGA()function provides a list of available cohorst for statistical analyses, along with relevant information
infoTCGA()
  
## checkTCGA provides detailed information about a selected dataset 
>>>>>>> e194d46ff62a3a658bdfcc6ec36599a3d419f280
checkTCGA('DataSets', 'COAD', date = NULL)
  
##downloadTCGA allows download of TCGA data from specified dates, from a particular cohort. 
dir.create( 'data')
downloadTCGA( cancerTypes = 'COAD', dataSet = 'Merge_Clinical.Level_1', destDir = 'data', date =  tail( checkTCGA('Dates'), 2 )[1] )
  
##readTCGA function allows to read unzipped files that were downloaded using downloadTCGA, organizing them into a data frame. Other devtools functions (sapply, grep...) are used to save the data in a more manageable format) 
sapply( 'COAD', function( element ){
  folder <- grep( paste0( '(_',element,'\\.', '|','_',element,'-FFPE)', '.*Clinical'),
                  list.files('data/'),value = TRUE)
  path <- paste0( 'data/', folder, '/', element, '.clin.merged.txt')
  assign( value = readTCGA( path, 'clinical' ), 
          x = paste0(element, '.clin.data'), envir = .GlobalEnv)
})

##A separate dataframe can be created with column names to have a sercheable list of available information.

cl <- colnames(COAD.clin.data)
cl <- as.data.frame(colnames(COAD.clin.data))
View(cl)

# WORKING CURVE ########################################################################
#survivalTCGA is used to extract survival information from clinical datasets from the TCGA project
  
survivalTCGA(COAD.clin.data, extract.cols = "patient.gender") -> COAD.survInfo.gender

surv_object <- Surv(time = COAD.survInfo.gender$times, event = COAD.survInfo.gender$patient.vital_status)

fit1 <- survfit(surv_object ~ patient.gender, data = COAD.survInfo.gender)

summary(fit1)

ggsurvplot(fit1, data = COAD.survInfo.gender, pval = TRUE)

#########################################################################################

# Rename function useful to simplify column titles and filter could be useful but didnt get it to work. 

survivalTCGA(COAD.clin.data, extract.cols = "patient.drugs.drug-10.therapy_types.therapy_type") -> COAD.survInfo.chemo

filter(.data = COAD.survInfo.chemo%therapy, c("chemotherapy", "hormone therapy"))

rename(.data = COAD.survInfo.chemo, therapy = "patient.drugs.drug-10.therapy_types.therapy_type") -> COAD.survInfo.chemo
  