
    

# Installing RTCGA and other packages 
## Installing and opening RTCGA  
    
install.packages("BiocManager")
BiocManager::install("RTCGA", version = "3.8")
library(RTCGA)
  
##installing RTCGA packages
installTCGA(packages = "RTCGA.clinical", build_vignettes = TRUE)
library(RTCGA.clinical)  
  
##Installing other packages
library(devtools)
library(dplyr)
library(survival)
library(survminer)
  
#Cheking and downloading TCGA datasets  
  
## infoTCGA()function provides a list of available cohorst for statistical analyses, along with relevant information
infoTCGA()
  
## checkTCGA provides detailed information about a selected dataset 
>>>>>>> e194d46ff62a3a658bdfcc6ec36599a3d419f280
checkTCGA('DataSets', 'COAD', date = NULL)
  
##downloadTCGA allows download of TCGA data from specified dates, from a particular cohort. 
dir.create( 'data')
downloadTCGA( cancerTypes = 'COAD', dataSet = 'Merge_Clinical.Level_1', destDir = 'data', date =  tail( checkTCGA('Dates'), 2 )[1] )
  
##readTCGA function allows to read unzipped files that were downloaded using downloadTCGA, organizing them into a data frame. Other devtools functions (sapply, grep...) are used to save the data in a more manageable format) 
sapply( 'COAD', function( element ){
  folder <- grep( paste0( '(_',element,'\\.', '|','_',element,'-FFPE)', '.*Clinical'),
                  list.files('data/'),value = TRUE)
  path <- paste0( 'data/', folder, '/', element, '.clin.merged.txt')
  assign( value = readTCGA( path, 'clinical' ), 
          x = paste0(element, '.clin.data'), envir = .GlobalEnv)
})

##A separate dataframe can be created with column names to have a sercheable list of available information.

cl <- colnames(COAD.clin.data)
cl <- as.data.frame(colnames(COAD.clin.data))
View(cl)

#survivalTCGA is used to extract survival information from clinical datasets from the TCGA project. Here we use patient gender as an example. 

COAD.survInfo.gender <- survivalTCGA(COAD.clin.data, extract.cols = "patient.gender")

##Furthermore, this reformated into a compiled version of the time of onset and event that can be interpreted by the following survfit function, which will fit the data to a Kaplan-Meier curve. A + behind survival times indicates censored data points.

Survival_Gender <- Surv(time = COAD.survInfo.gender$times, event = COAD.survInfo.gender$patient.vital_status)

KP_Gender <- survfit(Survival_Gender ~ patient.gender, data = COAD.survInfo.gender)

##The summary function will allow us to take a sneak peek of your data, look at survival times and more.

summary(KP_Gender)

##FInally the ggsurvplot function will allow us to visualize the data as a customizable survival graph
ggsurvplot(KP_Gender, data = COAD.survInfo.gender, pval = TRUE)

  